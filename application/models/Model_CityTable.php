<?php
/**
 * Model_CityTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    Application
 * @author     Bhaskar Joshi
 * @subpackage Model
 */
class Model_CityTable extends Doctrine_Table
{
	/**
	* For Fetch All Record From City Table
	*
	* @author Bhaskar joshi
	* @access public
	* @return array of City table records 
	*/
	public function getCityList($ssSortOn = '', $ssSortBy = '', $ssSearchField = '', $ssSearchKeyword = '', $ssLang = 'en')
	{
		try
		{
			$oSelectQuery = Doctrine_Query::create();
			$oSelectQuery->select('C.id, C.country_id, C.is_active, T.*');
			$oSelectQuery->from("Model_City C" );
			$oSelectQuery->leftjoin("C.Translation T");
			$oSelectQuery->andwhere("T.lang = ?", $ssLang);
			if( !empty($ssSearchField) && !empty($ssSearchKeyword) )
				$oSelectQuery->where($ssSearchField . " LIKE '" . $ssSearchKeyword . "%'" );
		
			if( !empty($ssSortOn) && !empty($ssSortBy) )
				 $oSelectQuery->orderBy( $ssSortOn . ' ' . $ssSortBy );
	
			return $oSelectQuery->fetchArray();	

		}
		catch( Exception $oException )
		{
			echo $oException->getMessage();
			return false;
		}	
	}
	
	/**
	* For Fetch Record of Given City Id From City Table
	*
	* @author Bhaskar joshi
	* @param  number $snCityId for Country Id
	* @access public
	* @return array of City table records 
	*/
	public function getCityById($snCityId ='')
	{
		if( $snCityId == "" || !is_numeric($snCityId) || $snCityId == 0 ) return false;
		try
		{
			$oSelectQuery = Doctrine_Query::create();
			$oSelectQuery->select('C.*, T.*');
			$oSelectQuery->from("Model_City C " );
			$oSelectQuery->leftjoin("C.Translation T");
			$oSelectQuery->where("C.id = ?", $snCityId);
	
			return $oSelectQuery->fetchArray();
		}
		catch( Exception $oException )
		{
			echo $oException->getMessage();
			return false;
		}
	}
	
	/**
	* For Insert City data
	*
	* @author Bhaskar joshi
	* @access public
	* @param  array $asCityData is form Data array
	* @return boolean
	*/
	public function InsertCity($asCityData = array())
	{
		if(!is_array($asCityData) || empty($asCityData)) return false;

		try
		{
			//Inserting City Data into table
			$oCity = new Model_City();
			$oCity->country_id = $asCityData['country_id'];
			
			//Inserting Language wise City Name using foreach
			$asLanguageList = Doctrine::getTable('Model_Language')->getLanguageList();
			foreach($asLanguageList as $snKey => $amValues) 
			{
				 $oCity->Translation[$amValues['lang']]->name = $asCityData['name_' . $amValues['lang']];
			}
			$oCity->is_active = $asCityData['is_active'];
			$oCity->created_at =  date('Y-m-d H:i:s');
			$oCity->updated_at =  date('Y-m-d H:i:s');
			$oCity->save();
			
			return true;
		}
		catch( Exception $oException )
		{
			echo $oException->getMessage();
			return false;
		}
	}
	
	/**
	* For Update City data
	*
	* @author Bhaskar joshi
	* @access public
	* @param  array $asCityFormData is form Data array
	* @return boolean
	*/
	public function UpdateCity($asCityFormData = array())
	{
		if( !is_array( $asCityFormData ) || empty( $asCityFormData ) ) return false;
		try
		{   
			//Update City Table
			$oUpdateCountry = Doctrine::getTable('Model_City')->find($asCityFormData['id']);	
			$oUpdateCountry->set("country_id" , $asCityFormData['country_id']);		
			$oUpdateCountry->set("is_active", $asCityFormData['is_active']);
			$oUpdateCountry->set("updated_at", date('Y-m-d H:i:s'));
						
			//Updateing Transaction Table 
			$asLanguageList = Doctrine::getTable('Model_Language')->getLanguageList();
			foreach($asLanguageList as $snKey => $amValues) {
				$oUpdateCountry->Translation[$amValues['lang']]->name = $asCityFormData['name_' . $amValues['lang']];
			}			
			$oUpdateCountry->save();
			return true;
		}
		catch( Exception $oException )
		{
			echo $oException->getMessage();
			return false;
		}
	}
	
	/**
	* For Delete City Record From Table
	*
	* @author Bhaskar joshi
	* @access public
	* @param  $snCityId for Which City Id is Delete
	* @return boolean
	*/
	public function deleteCity($snCityId = 0)
	{
		if( $snCityId == "" || !is_numeric($snCityId) || $snCityId == 0 ) return false;
		try
		{
			//delete data from Varible table
			Doctrine_Query::create()
						->delete("Model_City C")
						->where("C.id = ?", $snCityId)
						->execute();
			return true;
		}
		catch( Exception $oException )
		{
			echo $oException->getMessage();
			return false;
		}		
	}
	
	/**
	* For Enable Or Disable City
	*
	* @author Bhaskar joshi
	* @access public
	* @param  number  $snCityId is id of City to set Enable or Disable
	* @param  boolean $b__isActive for check the value of is_active on click
	* @return boolean
	*/
	public function changeEnableDisable($snCityId = 0,$bIsActive)
	{
		if((empty($snCityId) && empty($bIsActive)) || !is_numeric($snCityId) || $snCityId == 0 ) return false;
		try
		{
			//change the value of is_active of Given Row Id
			$bIsActive = ($bIsActive) ? 0 : 1;
			
			//Update Country table
			$asLanguageUpdate = Doctrine_Query::create()
					->update("Model_City C")
					->set("C.is_active", "?", $bIsActive)
					->set("updated_at", "?", date('Y-m-d H:i:s'))
					->where("C.id = ?", $snCityId)
					->execute();
			return true;
		}
		catch( Exception $oException )
		{
			echo $oException->getMessage();
			return false;
		}		
	}
}